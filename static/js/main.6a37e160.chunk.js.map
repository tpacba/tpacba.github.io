{"version":3,"sources":["assets/profile.jpg","assets/tinderforrestaurants.png","assets/cowabunga-demo.png","assets/smood.png","assets/snakport.png","assets/fitnesstracker.png","assets/directory.png","assets/instagraph-ql.png","components/GameArea/Snake.js","components/GameArea/Food.js","components/GameArea/StartButton.js","components/GameArea/Walls.js","components/GameArea/index.js","components/Wrapper.js","pages/About.js","pages/Portfolio.js","pages/Connect.js","components/Navbar.js","App.js","index.js"],"names":["module","exports","props","console","log","snakeDots","map","dot","i","style","left","top","className","key","useStyles","makeStyles","theme","root","margin","spacing","background","border","borderRadius","boxShadow","color","height","padding","classes","Box","position","width","Typography","variant","gutterBottom","Button","onClick","startGame","getRandomCoordinates","Math","floor","random","startState","start","food","direction","speed","GameArea","state","event","preventDefault","setState","setInterval","moveSnake","onKeyDown","window","keyCode","dots","head","length","push","shift","outOfBorders","gameOver","alert","location","href","collapseSelf","snake","pop","forEach","reload","eatFood","longerSnake","increaseSpeed","newSnake","unshift","document","onkeydown","this","StartButton","Walls","Snake","Food","React","Component","Wrapper","children","flexGrow","About","matches","useMediaQuery","Grid","container","item","xs","alt","src","profile","target","rel","display","flexWrap","justifyContent","overflow","backgroundColor","palette","paper","gridList","icon","tileData","img","instagraphql","title","description","links","github","website","tags","type","smood","snakeport","tinderforrestaurants","cowabunga","fitnesstracker","userdirectory","TitlebarGridList","useState","tile","setTile","openInfo","JSON","parse","currentTarget","dataset","value","GridList","cellHeight","cols","GridListTile","GridListTileBar","actionIcon","IconButton","aria-label","data-value","stringify","paddingLeft","Paper","Chip","label","marginLeft","marginTop","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","handleClose","Contact","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","textAlign","marginRight","marginBottom","SimpleBottomNavigation","BottomNavigation","showLabels","BottomNavigationAction","App","exact","path","component","Portfolio","Connect","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a37e160.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.8454e338.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tinderforrestaurants.5a9e8ccf.png\";","module.exports = __webpack_public_path__ + \"static/media/cowabunga-demo.9dacab9c.png\";","module.exports = __webpack_public_path__ + \"static/media/smood.361f7812.png\";","module.exports = __webpack_public_path__ + \"static/media/snakport.e2115b79.png\";","module.exports = __webpack_public_path__ + \"static/media/fitnesstracker.15c21fb5.png\";","module.exports = __webpack_public_path__ + \"static/media/directory.133f1154.png\";","module.exports = __webpack_public_path__ + \"static/media/instagraph-ql.ddaa7033.png\";","import React from 'react';\n\nexport default function(props) {\n    console.log(props.snakeDots)\n    return (\n        <div>\n            {props.snakeDots.map((dot, i) => {\n                const style = {\n                    left: `${dot[0]}%`,\n                    top: `${dot[1]}%`\n                }\n                return (\n                    <div className=\"snake-dot\" key={i} style={style}></div>\n                )\n            })}\n        </div>\n    )\n}","import React from 'react';\n\nexport default function(props) {\n    const style = {\n        left: `${props.dot[0]}%`,\n        top: `${props.dot[1]}%`\n    }\n\n    return (\n        <div className=\"snake-food\" style={style}></div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n            border: 0,\n            borderRadius: 3,\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n            color: 'white',\n            height: 48,\n            padding: '0 30px',\n        },\n    },\n}));\n\nexport default function(props) {\n    const classes = useStyles();\n\n    return (\n        <Box className=\"instructions\" left=\"5%\" position=\"relative\" top=\"20%\" width={350}>\n            <Typography variant=\"h5\" gutterBottom>\n                Hey, my name is Tristan Pacba. I'm a web developer, and welcome to my Portfolio!\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                Start the game to check out the rest of the pages.\n            </Typography>\n            <Box className={classes.root}>\n                <Button onClick={props.startGame} variant=\"contained\" color=\"secondary\">\n                    Start Game\n                </Button>\n            </Box>\n        </Box>\n    );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function() {\n    return (\n        <div>\n        <Typography className=\"about-wall\" variant=\"body2\" gutterBottom>Hit this wall to see the <strong>About</strong> page</Typography>\n        <Typography className=\"portfolio-wall\" variant=\"body2\" gutterBottom>Hit this wall to see the <strong>Portfolio</strong> page</Typography>\n        <Typography className=\"contact-wall\" variant=\"body2\" gutterBottom>Hit this wall to see the <strong>Connect</strong> page</Typography>\n        <Typography className=\"play-wall\" variant=\"body2\" gutterBottom>...Or just keep playing. That's cool too.</Typography>\n        </div>\n    )\n}","import React from 'react';\nimport Snake from './Snake';\nimport Food from './Food';\nimport StartButton from './StartButton';\nimport Walls from './Walls';\n\nfunction getRandomCoordinates() {\n    const min = 0;\n    const max = 49;\n\n    let x = Math.floor(Math.random() * (max - min) + min) * 2;\n    let y = Math.floor(Math.random() * (max - min) + min) * 2;\n    return [x, y]\n}\n\nconst startState = {\n    start: false,\n    food: getRandomCoordinates(),\n    direction: 'right',\n    speed: 100,\n    snakeDots: [\n        [0, 0],\n        [2, 0],\n        [4, 0]\n    ]\n}\n\nclass GameArea extends React.Component {\n    state = startState;\n\n    componentDidMount() {\n        document.onkeydown = this.onKeyDown;\n    }\n\n    componentDidUpdate() {\n        this.outOfBorders();\n        this.collapseSelf();\n        this.eatFood();\n    }\n\n    startGame = (event) => {\n        event.preventDefault();\n        this.setState({ start: true })\n        setInterval(this.moveSnake, this.state.speed)\n    }\n\n    onKeyDown = (event) => {\n        event = event || window.event;\n        event.preventDefault();\n        if (this.state.direction === 'left') {\n            switch (event.keyCode) {\n                case 38:\n                    this.setState({ direction: 'down' })\n                    break;\n                case 40:\n                    this.setState({ direction: 'up' })\n                    break;\n                default:\n                    console.log(this.state.direction)\n                    break;\n            }\n        } else if (this.state.direction === 'up') {\n            switch (event.keyCode) {\n                case 37:\n                    this.setState({ direction: 'left' })\n                    break;\n                case 39:\n                    this.setState({ direction: 'right' })\n                    break;\n                default:\n                    console.log(this.state.direction)\n                    break;\n            }\n        } else if (this.state.direction === 'right') {\n            switch (event.keyCode) {\n                case 38:\n                    this.setState({ direction: 'down' })\n                    break;\n                case 40:\n                    this.setState({ direction: 'up' })\n                    break;\n                default:\n                    console.log(this.state.direction)\n                    break;\n            }\n        } else if (this.state.direction === 'down') {\n            switch (event.keyCode) {\n                case 37:\n                    this.setState({ direction: 'left' })\n                    break;\n                case 39:\n                    this.setState({ direction: 'right' })\n                    break;\n                default:\n                    console.log(this.state.direction)\n                    break;\n            }\n        }\n    }\n\n    moveSnake = () => {\n        if(this.state.start) {\n            let dots = [...this.state.snakeDots]\n            let head = dots[dots.length - 1]\n    \n            switch (this.state.direction) {\n                case 'left':\n                    head = [head[0] - 2, head[1]];\n                    break;\n                case 'up':\n                    head = [head[0], head[1] + 2];\n                    break;\n                case 'right':\n                    head = [head[0] + 2, head[1]];\n                    break;\n                case 'down':\n                    head = [head[0], head[1] - 2];\n                    break;\n                default:\n                    console.log(this.state.direction);\n                    break;\n            }\n            dots.push(head);\n            dots.shift();\n            this.setState({ snakeDots: dots })\n        }\n    }\n\n    outOfBorders = () => {\n        let head = this.state.snakeDots[this.state.snakeDots.length - 1]\n        //right,bottom,left,top\n        if (head[1] >= 100) {\n            this.gameOver()\n        } else if (head[0] >= 100) {\n            alert(\"Redirecting to Portfolio\");\n            this.setState(startState);\n            window.location.href = \"/#/portfolio\"\n        } else if (head[0] < 0) {\n            alert(\"Redirecting to Connect\");\n            this.setState(startState);\n            window.location.href = \"/#/connect\"\n        } else if (head[1] < 0) {\n            alert(\"Redirecting to About\");\n            this.setState(startState);\n            window.location.href = \"/#/about\"\n        }\n    }\n\n    collapseSelf = () => {\n        let snake = [...this.state.snakeDots];\n        let head = snake[snake.length - 1];\n        snake.pop();\n        snake.forEach(dot => {\n            if (head[0] === dot[0] && head[1] === dot[1]) {\n                this.gameOver();\n            }\n        })\n    }\n\n    gameOver = () => {\n        alert(\"Game Over\");\n        this.setState(startState);\n        window.location.reload(false);\n    }\n\n    eatFood = () => {\n        let snake = [...this.state.snakeDots];\n        let head = snake[snake.length - 1];\n        let food = this.state.food;\n        if (head[0] === food[0] && head[1] === food[1]) {\n            this.setState({ food: getRandomCoordinates() })\n            this.longerSnake();\n            this.increaseSpeed();\n        }\n    }\n\n    increaseSpeed = () => {\n        this.setState({ speed: this.state.speed + 10 })\n    }\n\n    longerSnake = () => {\n        let newSnake = [...this.state.snakeDots];\n        newSnake.unshift([]);\n        this.setState({ snakeDots: newSnake })\n    }\n\n    render() {\n        console.log(this.state.direction)\n        return (\n            <div className=\"game-area\">\n                {(!this.state.start && <StartButton startGame={this.startGame}></StartButton>)}\n                {(this.state.start && <Walls></Walls>)}\n                <Snake snakeDots={this.state.snakeDots}></Snake>\n                <Food dot={this.state.food}></Food>\n            </div>\n        );\n    }\n}\n\nexport default GameArea;","import React from \"react\";\n\nfunction Wrapper(props) {\n    return <main className=\"wrapper\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport profile from \"../assets/profile.jpg\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Close from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function About() {\n    const classes = useStyles();\n    const matches = useMediaQuery(\"(min-width:1100px)\");\n\n    const handleClose = (event) => {\n        event.preventDefault();\n        window.location.href = \"/#/\";\n    };\n\n    return (\n        <div className={`about-page ${classes.root}`}>\n            <Close className=\"close close-port\" onClick={handleClose}></Close>\n            <Grid container spacing={3}>\n                {matches ? (\n                    <>\n                        <Grid item xs={3}>\n                            <img alt=\"profile\" className=\"profile-image\" src={profile}></img>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <Typography variant=\"h3\" gutterBottom>\n                                About\n              </Typography>\n                            <Typography variant=\"body1\" gutterBottom>\n                                Hey, thanks for checking out my website! My name is Tristan\n                                Pacba, and I'm a web developer. I'm a graduate of UCLA's\n                                Full-Stack Development Bootcamp Program and Azusa Pacific\n                                University with a BS in Physics. I'm a skilled problem-solver\n                                and have experience developing web applications using MERN stack\n                                (MongoDB, ExpressJS, ReactJS, and NodeJS) that incorporates\n                                back-end solutions with front-end design, like \"SnakePort\" which\n                                is my take on combining the retro arcade game with my portfolio\n                                website using <a href=\"https://material-ui.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Material-UI</a> design.\n              </Typography>\n                        </Grid>\n                    </>\n                ) : (\n                        <>\n                            <Grid item xs={12}>\n                                <img alt=\"profile\" className=\"profile-image\" src={profile}></img>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant=\"h3\" gutterBottom>\n                                    About\n              </Typography>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    My name is Tristan Pacba, and I'm a web developer. I'm a graduate\n                                    of UCLA's Full-Stack Development Bootcamp Program and Azusa\n                                    Pacific University with a BS in Physics. I'm a skilled\n                                    problem-solver and have experience developing web applications\n                                    using MERN stack (MongoDB, ExpressJS, ReactJS, and NodeJS) that\n                                    incorporates back-end solutions with front-end design, like\n                                    \"SnakePort\" which is my take on combining the retro arcade game\n                                    with my portfolio website.\n              </Typography>\n                            </Grid>\n                        </>\n                    )}\n                <Grid item xs={12}>\n                <Typography variant=\"body1\" gutterBottom>\n\n                    My past experience includes being a STEM educator, teaching Physics at\n                    James A. Garfield High School, and Mathematics at Los Angeles Christian\n                    Academy. I transitioned to web development at the beginning of 2020\n                    and now aspire to become a software engineer, building apps for\n                    Educational Technology.\n          <br></br>\n                    <br></br>\n          Just to highlight some of my work, I was able to engineer the backend\n          functionalities in a recent team project, called \"Smood\". The app\n          itself is a music player that curates the user's music according to\n          their mood by fully integrating the Spotify Web API with ReactJS state\n          and lifecycles. You can check out the source code for \"Smood\",\n          \"SnakePort\", as well as my other projects on my{\" \"}\n                    <a href=\"/#/portfolio\">Portfolio</a> page.\n                    </Typography>\n        </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Close from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport tinderforrestaurants from \"../assets/tinderforrestaurants.png\";\nimport cowabunga from \"../assets/cowabunga-demo.png\";\nimport smood from \"../assets/smood.png\";\nimport snakeport from \"../assets/snakport.png\";\nimport fitnesstracker from \"../assets/fitnesstracker.png\";\nimport userdirectory from \"../assets/directory.png\";\nimport instagraphql from \"../assets/instagraph-ql.png\";\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        height: 450,\n    },\n    icon: {\n        color: \"rgba(255, 255, 255, 0.54)\",\n    },\n}));\n\nconst tileData = [\n    {\n        img: instagraphql,\n        title: \"InstagraphQL\",\n        description:\n            `InstagraphQL is fully-fledged social media app in which users can register and login to create posts and interact with other users by commenting or liking their posts.\n            It uses the GraphQL client, Apollo Server, to manage and manipulate database actions and Auth0 programming patterns to hash passwords and validate token usages. \n            It also uses the Semantic UI library to help with the React-based front-end design.\n            Current development will allow users to post media items.`,\n        links: {\n            github: \"https://github.com/tpacba/InstaGraphQL\",\n            website: \"https://stupefied-minsky-c51eac.netlify.app/\"\n        },\n        tags: [\"GraphQL\", \"Apollo Server\", \"MongoDB\", \"Netlify\"],\n        type: \"INDIVIDUAL\"\n    },\n    {\n        img: smood,\n        title: \"Smood\",\n        description:\n            `Smood is a music player that chooses music for the user depending on their mood. \n            It integrates Spotify Web API's functionalities with ReactJS states and lifecycles to create responsive searches and commands. \n            My work came mainly from back-end development, like deploying the OAuth Server to access the API, setting up functions for the music player, and develop components to render varying search results.`,\n        links: {\n            github: \"https://github.com/tpacba/project-smood\",\n            website: \"https://projectsmood.herokuapp.com/\",\n        },\n        tags: [\"ReactJS\", \"Heroku\", \"APIs\", \"OAuth\", \"NodeJS\"],\n        type: \"TEAM\"\n    },\n    {\n        img: snakeport,\n        title: \"SnakePort\",\n        description:\n            `SnakePort is my take on creating an interactive portfolio as a web developer.\n            The retro arcade Snake game is coded entirely with ReactJS thanks to lifecycle methods (i.e. componentDidMount & componentDidUpdate).\n            The pages were designed using the Material-UI framework from grid components to icons.`,\n        links: {\n            github: \"https://github.com/tpacba/tpacba.github.io.git\",\n            website: \"https://tpacba.github.io\",\n        },\n        tags: [\"ReactJS\", \"Material-UI\", \"Javascript\", \"React-Router\"],\n        type: \"INDIVIDUAL\"\n    },\n    {\n        img: tinderforrestaurants,\n        title: \"Tinder For Restaurants\",\n        description:\n            `Tinder For Restaurants is an app just like Tinder but for choosing restaurants.\n            By using the familiar Tinder UI of swiping to choose or eliminate, groups of users can choose a single restaurant by rounds of elimination.\n            The app uses Yelp API to create restaurant suggestions and MySQL database to save and render restaurant data in real-time.\n            I was able to design the website theme using Figma and Bootstrap to create a mobile-responsive app.`,\n        links: {\n            github: \"https://github.com/tpacba/tinderforrestaurants.git\",\n            website: \"https://vast-lowlands-43566.herokuapp.com/\",\n        },\n        tags: [\"MySQL\", \"Sequilize ORM\", \"PassportJS\", \"Figma\", \"ExpressJS\"],\n        type: \"TEAM\"\n    },\n    {\n        img: cowabunga,\n        title: \"Cowabunga Surfing App\",\n        description:\n            `Cowabunga was my first developed web application. It's a beach landmark locater that integrates various API's such as Google Maps, Coastal Commission, Open Weather, and StormGlass\n        to render data about traffic, weather, distance, and amenities. My contribution came from back-end development, creating API calls and using Local Storage as an intro to databases.`,\n        links: {\n            github: \"https://github.com/FuDoggy/project1\",\n            website: \"https://fudoggy.github.io/project1/\",\n        },\n        tags: [\"APIs\", \"Bootstrap\", \"jQuery\", \"Git\", \"HTML & CSS\"],\n        type: \"TEAM\"\n    },\n    {\n        img: fitnesstracker,\n        title: \"Workout Tracker\",\n        description: \n        `Workout Tracker  allows users to view, create, and track daily workouts. Users can log multiple exercises in a workout on a given day and track the name, type, weight, sets, reps, and duration of the exercise or, if the exercise is a cardio exercise, track the distance traveled. \n        The app uses MongoDB with a Mongoose schema and handles routes with Express.`,\n        links: {\n            github: \"https://github.com/tpacba/homework17-workout-tracker\",\n            website: \"https://pacific-anchorage-84827.herokuapp.com/\",\n        },\n        tags: [\"MongoDB\", \"Mongoose\", \"Express\", \"AJAX\"],\n        type: \"INDIVIDUAL\"\n    },\n    {\n        img: userdirectory,\n        title: \"User Directory\",\n        description: `The application allows users to be able to view non-sensitive data at once, like an employee directory. \n        The app uses React to break up the UI into components, to manage component state, and to respond to user events. \n        The app also uses Regex (or Regular Expression) to determine string matches, despite case and space discrepancies.`,\n        links: {\n            github: \"https://github.com/tpacba/homework19-userdirectory\",\n            website: \"https://tpacba.github.io/homework19-userdirectory/\",\n        },\n        tags: [\"ReactJS\", \"Bootstrap\", \"Regex\", \"APIs\"],\n        type: \"INDIVIDUAL\"\n    },\n];\n\nexport default function TitlebarGridList() {\n    const [tile, setTile] = useState(tileData[0]);\n    const classes = useStyles();\n\n    const openInfo = (event) => {\n        event.preventDefault();\n        setTile(JSON.parse(event.currentTarget.dataset.value));\n    };\n\n    const handleClose = (event) => {\n        event.preventDefault();\n        window.location.href = \"/\";\n    };\n\n    return (\n        <div className={`portfolio-page ${classes.root}`}>\n            <Close className=\"close close-port\" onClick={handleClose}></Close>\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" gutterBottom>\n                        Portfolio\n          </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"body2\" gutterBottom>\n                        Scroll down to check out some of my recent projects! Link to site and open-source\n                        Github are always provided. <br></br>Visit the <a href=\"/#/connect\">Connect Page</a> to connect with me through Github, LinkedIn, and other socials.\n          </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                    <GridList cellHeight={180} className={classes.gridList} cols={1} style={{border: \"1px solid lightGrey\"}}>\n                        {tileData.map((tile) => (\n                            <GridListTile key={tile.img}>\n                                <img src={tile.img} alt={tile.title} />\n                                <GridListTileBar\n                                    title={tile.title}\n                                    actionIcon={\n                                        <IconButton\n                                            aria-label={`info about ${tile.title}`}\n                                            className={classes.icon}\n                                            onClick={openInfo}\n                                            data-value={JSON.stringify({\n                                                img: tile.img,\n                                                title: tile.title,\n                                                description: tile.description,\n                                                links: {\n                                                    github: tile.links.github,\n                                                    website: tile.links.website,\n                                                },\n                                                tags: tile.tags,\n                                                type: tile.type\n                                            })}\n                                        >\n                                            <InfoIcon />\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </Grid>\n                <Grid item xs={8} style={{ paddingLeft: \"20px\" }}>\n                    <Paper variant=\"outlined\" style={{ padding: \"20px\", backgroundColor: \"whitesmoke\" }}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h4\" gutterBottom>\n                                {tile.title}<Chip label={tile.type} variant=\"outlined\" style={{marginLeft: \"10px\"}}/>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"body1\" gutterBottom>\n                                {tile.description}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                                Site: <a href={tile.links.website} target=\"_blank\" rel=\"noopener noreferrer\">{tile.links.website}</a>\n                                <br></br>\n                            Github: <a href={tile.links.github} target=\"_blank\" rel=\"noopener noreferrer\">{tile.links.github}</a>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"caption\"><em>Screenshots:</em> <br></br></Typography>\n                            <img alt={tile.title} src={tile.img} style={{ height: \"100px\" }} />\n                        </Grid>\n                        <Grid item xs={12} style={{marginTop: \"10px\"}}>\n                            {tile.tags.map(item => (\n                                <Chip label={item} style={{margin: \"2px\", color: \"white\", background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"}}/>\n                            ))}\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Close from \"@material-ui/icons/Close\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport EmailIcon from '@material-ui/icons/Email';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\nconst handleClose = (event) => {\n    event.preventDefault();\n    window.location.href = \"/#/\";\n};\n\nexport default function Contact() {\n    const classes = useStyles();\n\n    return (\n        <div className={`about-page ${classes.root}`}>\n            <Close className=\"close close-port\" onClick={handleClose}></Close>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h3\" gutterBottom>\n                        Connect\n                    </Typography>\n                    <Typography variant=\"body1\" gutterBottom>\n                        Let's connect on LinkedIn or Github! If you're a recruiter, please check out #OpenToWork to see if I'm a good fit for your team. You can learn more about me on the <a href=\"/#/about\">About</a> page.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Accordion className=\"opentowork\" style={{ color: \"white\", display: \"block\", margin: \"auto\"}}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon style={{ color: \"white\" }} />}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Typography className={classes.heading}>\n                                <strong>For Recruiters:</strong> #OpenToWork\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography variant=\"subtitle2\">\n                                <strong>Job titles:</strong> Full Stack Engineer · Software Engineer · Web\n                                Developer · Web Programmer · Javascript Developer\n                                <hr></hr><strong>Job locations:</strong> Los Angeles\n                                Metropolitan Area · San Diego County, California · Orange\n                                County, California · Open to relocating\n                                <hr></hr><strong>Start date:</strong> Immediately, I’m actively applying\n                                <hr></hr><strong>Job types:</strong> Full-time · Contract · Internship\n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n                </Grid>\n\n                <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Typography variant=\"body1\">\n                        <a href=\"mailto: tpacba@live.com\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"black\" }}><EmailIcon style={{ fontSize: 40, marginRight: \"10px\", marginBottom: \"-15px\" }}></EmailIcon>tpacba@live.com</a>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Typography variant=\"body1\">\n                        <a href=\"https://www.linkedin.com/in/tristan-pacba/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"black\" }}><LinkedInIcon style={{ fontSize: 40, marginRight: \"10px\", marginBottom: \"-15px\" }}></LinkedInIcon>https://www.linkedin.com/in/tristan-pacba/</a>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Typography variant=\"body1\">\n                        <a href=\"https://github.com/tpacba\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"black\" }}><GitHubIcon style={{ fontSize: 40, marginRight: \"10px\", marginBottom: \"-15px\" }}></GitHubIcon>https://github.com/tpacba</a>\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 500,\n    },\n});\n\nexport default function SimpleBottomNavigation() {\n    const classes = useStyles();\n\n    return (\n        <BottomNavigation\n            showLabels\n            className={classes.root}\n        >\n            <BottomNavigationAction href=\"/#/about\" label=\"About\" icon={<PortraitIcon />} />\n            <BottomNavigationAction href=\"/#/portfolio\" label=\"Portfolio\" icon={<ImportContactsIcon />} />\n            <BottomNavigationAction href=\"/#/connect\" label=\"Connect\" icon={<AlternateEmailIcon />} />\n        </BottomNavigation>\n    );\n}\n","import React from 'react';\nimport GameArea from './components/GameArea';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Wrapper from './components/Wrapper';\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\nimport Connect from './pages/Connect';\nimport Navbar from './components/Navbar'\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Wrapper>\n          <Route exact path=\"/\" component={GameArea} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          <Route exact path=\"/connect\" component={Connect} />\n          <center><Navbar></Navbar></center>\n        </Wrapper>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}